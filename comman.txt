http://172.23.3.242:8761/eureka/apps/ACCOUNTING-TASK-SERVICE/168-PC:accounting-task-service:8188/status?value=OUT_OF_SERVICE
服务下线 put请求
http://172.23.3.242:8761/eureka/apps/ACCOUNTING-TASK-SERVICE/168-PC:accounting-task-service:8188/status?value=UP
服务上线 post请求


eureka.client.register-with-eureka=false
eureka.client.fetch-registry=false
本地服务禁止注册上服务

wireshark 常用过滤规则
查找目的地址为192.168.101.8的包，ip.dst==192.168.101.8；
查找源地址为ip.src==1.1.1.1
tcp.port==80，这条规则是把源端口和目的端口为80的都过滤出来。
tcp.dstport==80只过滤目的端口为80的
tcp.srcport==80只过滤源端口为80的包
http 直接输入协议名即可，如过滤HTTP的协议
过滤get包，http.request.method=="GET",
过滤post包，http.request.method=="POST"
http.request.uri contains “/dll/test.htm?“



目标机器 ssh-keygen -t rsa
本机器  ssh-copy-id -i ~/id_rsa.pub root@172.23.60.4
 du -h --max-depth=1 ./  查看目录大小
 /sbin/iptables -I INPUT -p tcp --dport 80 -j ACCEPT
 
 
jmap -histo 4284  > d:/log.txt
jmap -dump:format=b,file=heapdump pid：将内存使用的详细情况输出到文件
然后使用jhat命令查看该文件：jhat -port 4000 文件名 ，在浏览器中访问http:localhost:4000/

1 top 查找最高进程的pid
2 top -H -p pid 找到最高线程的xid
3 printf "%x\n" xid 查找16位的线程名称
4 jstack pid > jstack.txt  打印线程信息
5 grep 线程名称  jstack.txt
jmap -dump:format=b,file=文件名 [pid]

查询gc情况
jstat -gc PID 5000(间隔时间，单位为毫秒) 20（打印次数）
jstat -gcutil PID 5000(间隔时间，单位为毫秒) 20（打印次数）

watch com.yzf.pangolin.web.portal.controller gainTaskGroup "{params,returnObj}" -x 2
wangjian  NF_XbL0LSn2EtHVh

redis-cli -h 172.23.0.134 -p 6379 --bigkeys -i 0.01
•Ubuntu 及其衍生版：apt-get update && apt-get install vim
•以 Red-Hat 为基础的发行版：yum update && yum install vim
•openSUSE ：zypper update && zypper install vim
admin faQW5GrU7RL7BhoP
kubectl.exe create -f transer.yaml
kubectl.exe apply -f transer.yaml
kubectl -n fintax-pre set image deployment/	transfer-server-set9 transfer-server=yzf-tcr.tencentcloudcr.com/fintax/transfer-server-service:v1.0.432-master-faebdf7

kubectl -n fintax-pre set image deployment/transfer-server-set6 transfer-server=yzf-tcr.tencentcloudcr.com/fintax/transfer-server-service:v1.0.418-master-a1452ad
kubectl -n [命名空间] set image deployment/[应用名] [容器名]=[镜像名]

git操作
git branch feature-tmp-test
git push origin feature-tmp-test

回退命令：
$ git reset --hard HEAD^         回退到上个版本
$ git reset --hard HEAD~3        回退到前3次提交之前，以此类推，回退到n次提交之前
$ git reset --hard commit_id     退到/进到 指定commit的sha码
 
强推到远程：
$ git push origin HEAD --force
git push -f origin master

方案一
1.将所要push的内容所在的分支的protected权限关闭
(1)进入所在项目的settings
(2)点击进入Protected branches,点击unprotected将master分支的权限改变，即关闭master的protected权限
方案二



mysql 、etc/my。conf
#basedir = /usr/share/mysql
datadir = /data/mysql/data/yzf/
user                  = mysql
port                  = 5688
server_id             = 200003
log-bin=mysql-bin
character_set_server    = utf8
relay-log       = /data/mysql/data/5688/relay_bin_logs/relay_bin
relay-log-purge = 7
log-slave-updates
log-bin=/data/mysql/data/5688/bin_logs/mysql-bin
log_bin_trust_function_creators = 1
expire-logs-days                = 14
log-error = /usr/local/mysql/yzf/5688/mysql_error.log
pid-file  = /usr/local/mysql/yzf/5688/5688.pid
max_binlog_size                 = 1024M
binlog_cache_size               = 16M
federated
key_buffer_size                 = 32M
wait_timeout        = 300
interactive_timeout = 300
max_allowed_packet             = 64M
max_connect_errors             = 1000000
skip_name_resolve
tmp_table_size                 = 32M
max_heap_table_size            = 32M
query_cache_type               = 0
query_cache_size               = 0
query_cache_limit              = 4M
max_connections                = 20000
thread_cache_size              = 100
open_files_limit               = 65535
table_definition_cache         = 4096
table_open_cache               = 4096
innodb_buffer_pool_size         = 24G
innodb_log_file_size            = 512M
sync_binlog                       = 1
innodb_flush_log_at_trx_commit  = 1
innodb_flush_method            = O_DIRECT
innodb_log_files_in_group      = 2
tmpdir                   = /data/
read_buffer_size        = 32M
join_buffer_size        = 32M
slow_query_log      = on
slow_query_log_file = /data/mysql/data/yzf/slowqueries.log
long_query_time     = 1
lower_case_table_names=1
sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES
replicate-do-db=yzf_biz
gtid-mode=on
enforce-gtid-consistency

curl -X POST "http://localhost:8202/addTask" -H "accept: */*" -H "Content-Type: application/json" -d "{ \"areaCode\": \"36\", \"gsId\": 723987284727746560, \"kjnd\": 2020, \"kjqj\": 9, \"qyId\": 789216577715752960, \"source\": \"acountting:normal\", \"taskDetailList\": [ {\"reportId\" : 3600020006} ], \"type\": 26, \"userId\": 0}"



Select count(*)from information_schema.processlist 
http://172.23.3.242:8761/eureka/apps/ACCOUNTING-TASK-SERVICE/168-PC:accounting-task-service:8188/status?value=OUT_OF_SERVICE
服务下线 put请求
http://172.23.3.242:8761/eureka/apps/ACCOUNTING-TASK-SERVICE/168-PC:accounting-task-service:8188/status?value=UP
服务上线 post请求


eureka.client.register-with-eureka=false
eureka.client.fetch-registry=false
本地服务禁止注册上服务

wireshark 常用过滤规则
查找目的地址为192.168.101.8的包，ip.dst==192.168.101.8；
查找源地址为ip.src==1.1.1.1
tcp.port==80，这条规则是把源端口和目的端口为80的都过滤出来。
tcp.dstport==80只过滤目的端口为80的
tcp.srcport==80只过滤源端口为80的包
http 直接输入协议名即可，如过滤HTTP的协议
过滤get包，http.request.method=="GET",
过滤post包，http.request.method=="POST"
http.request.uri contains “/dll/test.htm?“



目标机器 ssh-keygen -t rsa
本机器  ssh-copy-id -i ~/id_rsa.pub root@172.23.60.4
 du -h --max-depth=1 ./  查看目录大小
 
 
jmap -histo 4284  > d:/log.txt
jmap -dump:format=b,file=heapdump pid：将内存使用的详细情况输出到文件
然后使用jhat命令查看该文件：jhat -port 4000 文件名 ，在浏览器中访问http:localhost:4000/

1 top 查找最高进程的pid
2 top -H -p pid 找到最高线程的xid
3 printf "%x\n" xid 查找16位的线程名称
4 jstack pid > jstack.txt  打印线程信息
5 grep 线程名称  jstack.txt

查询gc情况
jstat -gc PID 5000(间隔时间，单位为毫秒) 20（打印次数）
jstat -gcutil PID 5000(间隔时间，单位为毫秒) 20（打印次数）






